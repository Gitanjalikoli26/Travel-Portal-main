spring.application.name=travel-portal-backend
# Server Port
server.port=8080

# H2 Database Configuration (for development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:traveldb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.show-sql=true

# Hibernate DDL-Auto setting for schema management
# 'create-drop' ensures tables are created by Hibernate from your entities on each startup for in-memory H2.
spring.jpa.hibernate.ddl-auto=create-drop

# This property is not strictly necessary if spring.sql.init.mode=never, but it doesn't cause harm.
spring.jpa.defer-datasource-initialization=true

# JWT Secret Key and Expiration
app.jwt.secret=YourSuperSecretKeyForJWTGenerationThatIsLongAndRandomEnoughForSecurityPurposesAndShouldBeAtLeast256Bits
app.jwt.expiration-ms=3600000

# CORS Configuration (Crucial for React Frontend)
# Set this to the exact origin (protocol://domain:port) of your React application.
# Your screenshots consistently show http://localhost:3007 for the React app.
spring.web.cors.allowed-origins=http://localhost:3007
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600
spring.web.resources.static-locations=classpath:/static/



# SQL Initialization Mode
# Set to 'never' as you want data.sql to be empty and not cause errors.
# This means no data will be loaded automatically from data.sql.
spring.sql.init.mode=never